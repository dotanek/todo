{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mateusz\\\\Desktop\\\\todo\\\\src\\\\components\\\\List\\\\TaskGroup.jsx\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Task from './Task';\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    padding-bottom: 5px;\n`;\nconst Label = styled.div`\n    display: flex;\n    width: calc(100% - 5px);\n    height: 30px;\n    align-items: center;\n    padding-left: 5px;\n    font-size: 16px;\n    color: #606060;\n\n    &:hover {\n        cursor: pointer;\n    }\n`;\nconst Toggle = styled.div`\n    position: relative;\n    display: flex;\n    width: 25px;\n    height: 100%;\n    justify-content: center;\n    align-items: center;\n    transform: ${props => props.groupToggle ? 'translateY(-2px) rotate(0deg)' : 'rotate(-90deg)'};\n    transition: 0.2s ease-in-out;\n\n    div {\n        position: absolute;\n        width: 6px;\n        height: 1.5px;\n        background-color: #606060;\n    }\n`;\nconst Rect1 = styled.div`\n    transform-origin: right bottom;\n    transform: translate(-3px,4px) rotate(45deg);\n`;\nconst Rect2 = styled.div`\n    transform-origin: left bottom;\n    transform: translate(3px,4px) rotate(-45deg);\n`;\nconst Text = styled.div`\n    display: flex;\n    width: auto;\n    align-items: center;\n`;\nconst Line = styled.div`\n    display: flex;\n    flex-grow: 1;\n    margin-left: 10px;\n    margin-right: 20px;\n    border-bottom: 1px solid #999999;\n`;\nconst Amount = styled.div`\n    display: flex;\n    width: 20px;\n    justify-content: center;\n    align-items: center;\n    margin-right: 20px;\n    font-size: 15px;\n`;\nconst Tasks = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: calc(100% - 60px);\n    padding-left: 30px;\n    padding-right: 30px;\n`;\nconst Placeholder = styled.div`\n    display: flex;\n    width: 100%;\n    align-items: center;\n    font-size: 15px;\n    color: #606060;\n`;\n\nclass TaskGroup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      groupToggle: true\n    };\n\n    this.onClickLabel = () => {\n      this.setState({\n        groupToggle: !this.state.groupToggle\n      });\n    };\n\n    this.renderTasks = () => {\n      const tasks = this.props.taskGroup.tasks;\n\n      if (tasks && tasks.length > 0) {\n        return tasks.map(t => {\n          return /*#__PURE__*/React.createElement(Task, {\n            key: t.id,\n            task: t,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 24\n            }\n          });\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(Placeholder, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 20\n          }\n        }, \"There are no tasks for this day.\");\n      }\n    };\n\n    this.formatLabel = () => {\n      let today = new Date();\n      let date = this.props.taskGroup.date;\n\n      if (date.getYear() === today.getYear() && date.getMonth() === today.getMonth() && date.getDate() === today.getDate()) {\n        return 'Today';\n      }\n\n      if (date.getYear() === today.getYear() && date.getMonth() === today.getMonth() && date.getDate() === today.getDate() + 1) {\n        return 'Tomorrow';\n      }\n\n      let day;\n\n      switch ((date.getDay() + 6) % 7) {\n        case 0:\n          day = 'Monday';\n          break;\n\n        case 1:\n          day = 'Tuesday';\n          break;\n\n        case 2:\n          day = 'Wednesday';\n          break;\n\n        case 3:\n          day = 'Thursday';\n          break;\n\n        case 4:\n          day = 'Friday';\n          break;\n\n        case 5:\n          day = 'Saturday';\n          break;\n\n        case 6:\n          day = 'Friday';\n          break;\n      }\n\n      let d = date.getDate();\n      let m = date.getMonth();\n      let y = date.getFullYear();\n      return `${day} ${d > 9 ? d : '0' + d}.${m > 9 ? m : '0' + m}.${y}`;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      onClick: this.onClickLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Toggle, {\n      groupToggle: this.state.groupToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Rect1, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Rect2, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, this.formatLabel()), /*#__PURE__*/React.createElement(Line, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Amount, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }, this.props.taskGroup.tasks.length)), /*#__PURE__*/React.createElement(Tasks, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, this.state.groupToggle && this.renderTasks()));\n  }\n\n}\n\nexport default TaskGroup;","map":{"version":3,"sources":["C:/Users/Mateusz/Desktop/todo/src/components/List/TaskGroup.jsx"],"names":["React","Component","styled","Task","Container","div","Label","Toggle","props","groupToggle","Rect1","Rect2","Text","Line","Amount","Tasks","Placeholder","TaskGroup","state","onClickLabel","setState","renderTasks","tasks","taskGroup","length","map","t","id","formatLabel","today","Date","date","getYear","getMonth","getDate","day","getDay","d","m","y","getFullYear","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Task from './Task';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    padding-bottom: 5px;\r\n`\r\n\r\nconst Label = styled.div`\r\n    display: flex;\r\n    width: calc(100% - 5px);\r\n    height: 30px;\r\n    align-items: center;\r\n    padding-left: 5px;\r\n    font-size: 16px;\r\n    color: #606060;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\nconst Toggle = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    width: 25px;\r\n    height: 100%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transform: ${props => props.groupToggle ? 'translateY(-2px) rotate(0deg)' : 'rotate(-90deg)'};\r\n    transition: 0.2s ease-in-out;\r\n\r\n    div {\r\n        position: absolute;\r\n        width: 6px;\r\n        height: 1.5px;\r\n        background-color: #606060;\r\n    }\r\n`\r\n\r\nconst Rect1 = styled.div`\r\n    transform-origin: right bottom;\r\n    transform: translate(-3px,4px) rotate(45deg);\r\n`\r\n\r\nconst Rect2 = styled.div`\r\n    transform-origin: left bottom;\r\n    transform: translate(3px,4px) rotate(-45deg);\r\n`\r\n\r\nconst Text = styled.div`\r\n    display: flex;\r\n    width: auto;\r\n    align-items: center;\r\n`\r\n\r\nconst Line = styled.div`\r\n    display: flex;\r\n    flex-grow: 1;\r\n    margin-left: 10px;\r\n    margin-right: 20px;\r\n    border-bottom: 1px solid #999999;\r\n`\r\n\r\nconst Amount = styled.div`\r\n    display: flex;\r\n    width: 20px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-right: 20px;\r\n    font-size: 15px;\r\n`\r\n\r\nconst Tasks = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: calc(100% - 60px);\r\n    padding-left: 30px;\r\n    padding-right: 30px;\r\n`\r\n\r\nconst Placeholder = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    align-items: center;\r\n    font-size: 15px;\r\n    color: #606060;\r\n`\r\n\r\nclass TaskGroup extends Component {\r\n    state = {  \r\n        groupToggle: true,\r\n    }\r\n\r\n     // -- Events -- \r\n\r\n    onClickLabel = () => {\r\n        this.setState({ groupToggle:!this.state.groupToggle });\r\n    }\r\n\r\n    // -- Renders -- \r\n\r\n    renderTasks = () => {\r\n        const tasks = this.props.taskGroup.tasks;\r\n        if (tasks && tasks.length > 0) {\r\n            return tasks.map(t => {\r\n                return <Task key={t.id} task={t} />\r\n            });\r\n        } else {\r\n            return <Placeholder>There are no tasks for this day.</Placeholder>\r\n        }\r\n    }\r\n\r\n    // -- Other --\r\n\r\n    formatLabel = () => {\r\n        let today = new Date();\r\n        let date = this.props.taskGroup.date;\r\n\r\n        if (\r\n            date.getYear() === today.getYear() &&\r\n            date.getMonth() === today.getMonth() &&\r\n            date.getDate() === today.getDate()\r\n        ) {\r\n            return 'Today';\r\n        }\r\n\r\n        if (\r\n            date.getYear() === today.getYear() &&\r\n            date.getMonth() === today.getMonth() &&\r\n            date.getDate() === today.getDate() + 1\r\n        ) {\r\n            return 'Tomorrow';\r\n        }\r\n\r\n        let day;\r\n\r\n        switch ((date.getDay() + 6) % 7) {\r\n            case 0: day = 'Monday'; break;\r\n            case 1: day = 'Tuesday'; break;\r\n            case 2: day = 'Wednesday'; break;\r\n            case 3: day = 'Thursday'; break;\r\n            case 4: day = 'Friday'; break;\r\n            case 5: day = 'Saturday'; break;\r\n            case 6: day = 'Friday'; break;\r\n        }\r\n\r\n        let d = date.getDate();\r\n        let m = date.getMonth();\r\n        let y = date.getFullYear();\r\n\r\n        return `${day} ${d > 9 ? d : '0' + d}.${m > 9 ? m : '0' + m}.${y}`\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <Container>\r\n                <Label onClick={this.onClickLabel}>\r\n                    <Toggle groupToggle={this.state.groupToggle}>\r\n                        <Rect1 />\r\n                        <Rect2 />\r\n                    </Toggle>\r\n                    <Text>{this.formatLabel()}</Text>\r\n                    <Line />\r\n                    <Amount>{this.props.taskGroup.tasks.length}</Amount>\r\n                </Label>\r\n                <Tasks>\r\n                    {this.state.groupToggle && this.renderTasks()}\r\n                </Tasks>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n \r\nexport default TaskGroup;"]},"metadata":{},"sourceType":"module"}