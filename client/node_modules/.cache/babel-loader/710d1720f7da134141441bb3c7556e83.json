{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mateusz\\\\Desktop\\\\todo\\\\client\\\\src\\\\components\\\\List\\\\List.jsx\";\nimport React, { Component } from 'react';\nimport styled, { ThemeConsumer } from 'styled-components';\nimport axios from 'axios';\nimport Nav from './Nav';\nimport Contents from './Contents';\nimport Details from './Details';\nconst Container = styled.div`\n    display: flex;\n    width: 100vw;\n    height: ${window.innerHeight + 'px'};\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n`;\nconst Button = styled.div`\n    position: absolute;\n    left: 10px;\n    bottom: 10px;\n    width: 50px;\n    height: 50px;\n    border-radius: 25px;\n    background-color: #105510;\n    z-index: 1001;\n\n    @media screen {\n        &:hover {\n            cursor: pointer;\n        }\n    }\n`;\nconst SignOutButton = styled.button`\n    position: fixed;\n    width: 200px;\n    height:80px;\n    top: 100px;\n    right: 500px;\n    z-index: 1000;\n`;\nlet date = new Date();\nconst taskTabs = [{\n  label: 'Today',\n  id: 'today',\n  groupFilter: taskGroup => {\n    if (taskGroup.completed) {\n      return false;\n    }\n\n    if (!taskGroup.date) {\n      return false;\n    }\n\n    if (taskGroup.date.getYear() === date.getYear() && taskGroup.date.getMonth() === date.getMonth() && taskGroup.date.getDate() === date.getDate()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}, {\n  label: 'Tomorrow',\n  id: 'tomorrow',\n  groupFilter: taskGroup => {\n    if (taskGroup.completed) {\n      return false;\n    }\n\n    if (!taskGroup.date) {\n      return false;\n    }\n\n    if (taskGroup.date.getYear() === date.getYear() && taskGroup.date.getMonth() === date.getMonth() && taskGroup.date.getDate() === date.getDate() + 1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}, {\n  label: 'This week',\n  id: 'this-week',\n  groupFilter: taskGroup => {\n    if (taskGroup.completed) {\n      return false;\n    }\n\n    if (!taskGroup.date) {\n      return false;\n    }\n\n    let weekStart = new Date();\n    let weekEnd = new Date();\n    weekStart.setDate(date.getDate() - date.getDay());\n    weekStart.setHours(24, 0, 0);\n    weekEnd.setDate(date.getDate() + (7 - date.getDay()));\n    weekEnd.setHours(23, 59, 59);\n\n    if (taskGroup.date >= weekStart && taskGroup.date <= weekEnd) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}, {\n  label: 'Next week',\n  id: 'next-week',\n  groupFilter: taskGroup => {\n    if (taskGroup.completed) {\n      return false;\n    }\n\n    let weekStart = new Date();\n    let weekEnd = new Date();\n    weekStart.setDate(date.getDate() - date.getDay() + 7);\n    weekStart.setHours(24, 0, 0);\n    weekEnd.setDate(date.getDate() + (7 - date.getDay()) + 7);\n    weekEnd.setHours(23, 59, 59);\n\n    if (taskGroup.date >= weekStart && taskGroup.date <= weekEnd) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}];\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      navToggle: window.innerWidth >= 900,\n      detailsToggle: window.innerWidth >= 700,\n      mobileView: window.innerWidth < 700,\n      taskGroups: [],\n      activeTab: taskTabs[0]\n    };\n\n    this.onResizeWindow = () => {\n      this.containerRef.current.style.height = window.innerHeight + 'px'; // Keep 100% height on window resize.\n\n      if (this.windowWidth === window.innerWidth) {\n        // Prevent nav and details from hiding on height change. (Necessary for mobile when keyboard changes site height)\n        return;\n      }\n\n      this.windowWidth = window.innerWidth;\n      let navToggle;\n      let detailsToggle;\n\n      if (window.innerWidth < 700) {\n        navToggle = false;\n        detailsToggle = false;\n      } else if (window.innerWidth < 900) {\n        navToggle = false;\n        detailsToggle = true;\n      } else {\n        navToggle = true;\n        detailsToggle = true;\n      }\n\n      if (typeof this.state.userNavToggle !== 'undefined' && this.state.userNavToggle === false) {\n        navToggle = false; // Once user has hidden the nav it should not appear on resize.\n      }\n\n      this.setState({\n        navToggle,\n        detailsToggle\n      });\n    };\n\n    this.onClickWindow = e => {\n      if (!this.navRef.current) {\n        return;\n      }\n\n      if (!this.navRef.current.contains(e.target) && !this.buttonRef.current.contains(e.target) && window.innerWidth < 900) {\n        this.setState({\n          navToggle: false\n        }); // Hides navigation when clicking outside of it in mobile mode.\n      }\n\n      if (!this.detailsRef.current) {\n        return;\n      }\n\n      if (!this.detailsRef.current.contains(e.target) && window.innerWidth < 700) {\n        this.setState({\n          detailsToggle: false\n        }); // Hides details when clicking outside of it in mobile mode.\n      }\n    };\n\n    this.onClickButton = () => {\n      // Auto toggle and user toggle is spearated.\n      if (typeof this.state.userNavToggle === 'undefined') {\n        this.setState({\n          userNavToggle: !this.state.navToggle,\n          navToggle: !this.state.navToggle\n        });\n      } else {\n        this.setState({\n          userNavToggle: !this.state.userNavToggle,\n          navToggle: !this.state.navToggle\n        });\n      }\n    };\n\n    this.onClickTaskTab = taskTab => {\n      this.setState({\n        activeTab: taskTab,\n        navToggle: window.innerWidth >= 900\n      });\n    };\n\n    this.onClickTask = task => {\n      setTimeout(() => {\n        this.setState({\n          activeTask: task,\n          detailsToggle: true\n        });\n      }, 1);\n    };\n\n    this.onClickDetailsReturn = () => {\n      this.setState({\n        detailsToggle: false,\n        activeTask: undefined\n      });\n    };\n\n    this.onChangeTaskTitle = e => {\n      if (!this.state.activeTask) {\n        return this.setState({\n          error: 'No active task while attempting to change title.'\n        });\n      }\n\n      const tasks = [...this.state.tasks];\n      const target = tasks.find(t => t.id === this.state.activeTask.id);\n\n      if (typeof target === 'undefined') {\n        return this.setState({\n          error: 'The task does not exist.'\n        });\n      }\n\n      target.title = e.target.value;\n      this.setState({\n        tasks: tasks,\n        taskGroups: this.groupTasks(tasks)\n      });\n    };\n\n    this.onChangeTaskDescription = e => {\n      if (!this.state.activeTask) {\n        return this.setState({\n          error: 'No active task while attempting to change title.'\n        });\n      }\n\n      const tasks = [...this.state.tasks];\n      const target = tasks.find(t => t.id === this.state.activeTask.id);\n\n      if (typeof target === 'undefined') {\n        return this.setState({\n          error: 'The task does not exist.'\n        });\n      }\n\n      target.description = e.target.value;\n      this.setState({\n        tasks: tasks,\n        taskGroups: this.groupTasks(tasks)\n      });\n    };\n\n    this.groupTasks = tasks => {\n      let taskGroups = [{\n        tasks: [],\n        completed: true\n      }, // Completed task group.\n      {\n        tasks: []\n      } // No date task group.\n      ];\n      tasks.forEach(t => {\n        if (t.completed) {\n          return taskGroups[0].tasks.push(t);\n        }\n\n        if (!t.date) {\n          return taskGroups[1].tasks.push(t);\n        }\n\n        let target = taskGroups.find(g => g.date === t.date);\n\n        if (typeof target === 'undefined') {\n          taskGroups.push({\n            tasks: [t],\n            date: t.date\n          });\n        } else {\n          target.tasks.push(t);\n        }\n      });\n      return taskGroups;\n    };\n\n    this.componentDidMount = () => {\n      window.addEventListener('resize', this.onResizeWindow);\n      window.addEventListener('click', this.onClickWindow); // Grouping tasks by date.\n\n      /*const tasks = [\r\n          { id:'task1', title:'Wyrzucić śmieci.', description:'Elo.', date: date },\r\n          { id:'task2', title:'Zrobić pranie.', description: '', date: date },\r\n          { id:'task3', title:'Pamiętaj aby strzelić bujakę po mieście i dostać limoooooooooooooooooooo.', date: date2 },\r\n          { id:'task3', title:'Pamiętaj o kablu do akumulatora.', date: date3, completed:true },\r\n          { id:'task3', title:'Pobić żonę', date: date4 },\r\n          { id:'task3', title:'Pobić żonę2' },\r\n      ];*/\n\n      const token = localStorage.getItem('token');\n      let config = {\n        headers: {\n          'auth-token': token\n        }\n      };\n      axios.get('http://localhost:9000/api/user', config).then(res => {\n        this.setState({\n          username: res.data.username\n        });\n      }).catch(e => {\n        if (e.response) {\n          console.log(e.response.data);\n        }\n      });\n      axios.get('http://localhost:9000/api/tasks/fetch', config).then(res => {\n        const tasks = res.data;\n        this.setState({\n          tasks: tasks,\n          taskGroups: this.groupTasks(tasks)\n        });\n      }).catch(e => {\n        if (e.response) {\n          console.log(e.response.data);\n        }\n\n        this.setState({\n          tasks: [],\n          taskGroups: []\n        });\n      });\n    };\n\n    this.componentWillUnmount = () => {\n      window.removeEventListener('resize', this.onResizeWindow);\n      window.removeEventListener('click', this.onClickWindow);\n    };\n\n    this.navRef = React.createRef();\n    this.detailsRef = React.createRef();\n    this.buttonRef = React.createRef(); // This is temporary, will be deleted.\n\n    this.containerRef = React.createRef();\n    this.windowWidth = window.innerWidth;\n  } // -- Events --\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      ref: this.containerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SignOutButton, {\n      onClick: () => {\n        this.props.auth.signOut(() => {\n          this.props.history.push('/');\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 17\n      }\n    }, \"SignOut\"), /*#__PURE__*/React.createElement(Nav, {\n      activeTab: this.state.activeTab,\n      taskTabs: taskTabs,\n      navRef: this.navRef,\n      navToggle: this.state.navToggle,\n      taskGroups: this.state.taskGroups,\n      onClickTaskTab: taskTab => this.onClickTaskTab(taskTab),\n      username: this.state.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Contents, {\n      navToggle: this.state.navToggle,\n      detailsToggle: this.state.detailsToggle,\n      activeTab: this.state.activeTab,\n      taskGroups: this.state.taskGroups,\n      activeTask: this.state.activeTask,\n      onClickTask: t => this.onClickTask(t),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Details, {\n      detailsToggle: this.state.detailsToggle,\n      activeTask: this.state.activeTask,\n      detailsRef: this.detailsRef,\n      onClickDetailsReturn: this.onClickDetailsReturn,\n      onChangeTaskTitle: this.onChangeTaskTitle,\n      onChangeTaskDescription: this.onChangeTaskDescription,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      ref: this.buttonRef,\n      onClick: this.onClickButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["C:/Users/Mateusz/Desktop/todo/client/src/components/List/List.jsx"],"names":["React","Component","styled","ThemeConsumer","axios","Nav","Contents","Details","Container","div","window","innerHeight","Button","SignOutButton","button","date","Date","taskTabs","label","id","groupFilter","taskGroup","completed","getYear","getMonth","getDate","weekStart","weekEnd","setDate","getDay","setHours","List","constructor","props","state","navToggle","innerWidth","detailsToggle","mobileView","taskGroups","activeTab","onResizeWindow","containerRef","current","style","height","windowWidth","userNavToggle","setState","onClickWindow","e","navRef","contains","target","buttonRef","detailsRef","onClickButton","onClickTaskTab","taskTab","onClickTask","task","setTimeout","activeTask","onClickDetailsReturn","undefined","onChangeTaskTitle","error","tasks","find","t","title","value","groupTasks","onChangeTaskDescription","description","forEach","push","g","componentDidMount","addEventListener","token","localStorage","getItem","config","headers","get","then","res","username","data","catch","response","console","log","componentWillUnmount","removeEventListener","createRef","render","auth","signOut","history"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,SAAS,GAAGN,MAAM,CAACO,GAAI;;;cAGfC,MAAM,CAACC,WAAP,GAAqB,IAAK;;;;CAHxC;AASA,MAAMC,MAAM,GAAGV,MAAM,CAACO,GAAI;;;;;;;;;;;;;;;CAA1B;AAiBA,MAAMI,aAAa,GAAGX,MAAM,CAACY,MAAO;;;;;;;CAApC;AASA,IAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AAEA,MAAMC,QAAQ,GAAG,CACb;AACIC,EAAAA,KAAK,EAAE,OADX;AAEIC,EAAAA,EAAE,EAAC,OAFP;AAGIC,EAAAA,WAAW,EAAGC,SAAD,IAAe;AAExB,QAAIA,SAAS,CAACC,SAAd,EAAyB;AACrB,aAAO,KAAP;AACH;;AAED,QAAI,CAACD,SAAS,CAACN,IAAf,EAAqB;AACjB,aAAO,KAAP;AACH;;AAED,QACIM,SAAS,CAACN,IAAV,CAAeQ,OAAf,OAA6BR,IAAI,CAACQ,OAAL,EAA7B,IACAF,SAAS,CAACN,IAAV,CAAeS,QAAf,OAA8BT,IAAI,CAACS,QAAL,EAD9B,IAEAH,SAAS,CAACN,IAAV,CAAeU,OAAf,OAA6BV,IAAI,CAACU,OAAL,EAHjC,EAIE;AACE,aAAO,IAAP;AACH,KAND,MAMO;AACH,aAAO,KAAP;AACH;AACJ;AAtBL,CADa,EAyBb;AACIP,EAAAA,KAAK,EAAE,UADX;AAEIC,EAAAA,EAAE,EAAC,UAFP;AAGIC,EAAAA,WAAW,EAAGC,SAAD,IAAe;AAExB,QAAIA,SAAS,CAACC,SAAd,EAAyB;AACrB,aAAO,KAAP;AACH;;AAED,QAAI,CAACD,SAAS,CAACN,IAAf,EAAqB;AACjB,aAAO,KAAP;AACH;;AAGD,QACIM,SAAS,CAACN,IAAV,CAAeQ,OAAf,OAA6BR,IAAI,CAACQ,OAAL,EAA7B,IACAF,SAAS,CAACN,IAAV,CAAeS,QAAf,OAA8BT,IAAI,CAACS,QAAL,EAD9B,IAEAH,SAAS,CAACN,IAAV,CAAeU,OAAf,OAA6BV,IAAI,CAACU,OAAL,KAAiB,CAHlD,EAIE;AACE,aAAO,IAAP;AACH,KAND,MAMO;AACH,aAAO,KAAP;AACH;AACJ;AAvBL,CAzBa,EAkDb;AACIP,EAAAA,KAAK,EAAE,WADX;AAEIC,EAAAA,EAAE,EAAE,WAFR;AAGIC,EAAAA,WAAW,EAAGC,SAAD,IAAe;AAExB,QAAIA,SAAS,CAACC,SAAd,EAAyB;AACrB,aAAO,KAAP;AACH;;AAED,QAAI,CAACD,SAAS,CAACN,IAAf,EAAqB;AACjB,aAAO,KAAP;AACH;;AAED,QAAIW,SAAS,GAAG,IAAIV,IAAJ,EAAhB;AACA,QAAIW,OAAO,GAAG,IAAIX,IAAJ,EAAd;AACAU,IAAAA,SAAS,CAACE,OAAV,CAAkBb,IAAI,CAACU,OAAL,KAAiBV,IAAI,CAACc,MAAL,EAAnC;AACAH,IAAAA,SAAS,CAACI,QAAV,CAAmB,EAAnB,EAAsB,CAAtB,EAAwB,CAAxB;AACAH,IAAAA,OAAO,CAACC,OAAR,CAAgBb,IAAI,CAACU,OAAL,MAAkB,IAAIV,IAAI,CAACc,MAAL,EAAtB,CAAhB;AACAF,IAAAA,OAAO,CAACG,QAAR,CAAiB,EAAjB,EAAoB,EAApB,EAAuB,EAAvB;;AAEA,QACIT,SAAS,CAACN,IAAV,IAAkBW,SAAlB,IACAL,SAAS,CAACN,IAAV,IAAkBY,OAFtB,EAGE;AACE,aAAO,IAAP;AACH,KALD,MAKO;AACH,aAAO,KAAP;AACH;AACJ;AA5BL,CAlDa,EAgFb;AACIT,EAAAA,KAAK,EAAE,WADX;AAEIC,EAAAA,EAAE,EAAE,WAFR;AAGIC,EAAAA,WAAW,EAAGC,SAAD,IAAe;AAExB,QAAIA,SAAS,CAACC,SAAd,EAAyB;AACrB,aAAO,KAAP;AACH;;AAED,QAAII,SAAS,GAAG,IAAIV,IAAJ,EAAhB;AACA,QAAIW,OAAO,GAAG,IAAIX,IAAJ,EAAd;AACAU,IAAAA,SAAS,CAACE,OAAV,CAAmBb,IAAI,CAACU,OAAL,KAAiBV,IAAI,CAACc,MAAL,EAAlB,GAAmC,CAArD;AACAH,IAAAA,SAAS,CAACI,QAAV,CAAmB,EAAnB,EAAsB,CAAtB,EAAwB,CAAxB;AACAH,IAAAA,OAAO,CAACC,OAAR,CAAiBb,IAAI,CAACU,OAAL,MAAkB,IAAIV,IAAI,CAACc,MAAL,EAAtB,CAAD,GAAyC,CAAzD;AACAF,IAAAA,OAAO,CAACG,QAAR,CAAiB,EAAjB,EAAoB,EAApB,EAAuB,EAAvB;;AAEA,QACIT,SAAS,CAACN,IAAV,IAAkBW,SAAlB,IACAL,SAAS,CAACN,IAAV,IAAkBY,OAFtB,EAGE;AACE,aAAO,IAAP;AACH,KALD,MAKO;AACH,aAAO,KAAP;AACH;AACJ;AAxBL,CAhFa,CAAjB;;AA6GA,MAAMI,IAAN,SAAmB9B,SAAnB,CAA6B;AASzB+B,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SARnBC,KAQmB,GARX;AACJC,MAAAA,SAAS,EAAGzB,MAAM,CAAC0B,UAAP,IAAqB,GAD7B;AAEJC,MAAAA,aAAa,EAAG3B,MAAM,CAAC0B,UAAP,IAAqB,GAFjC;AAGJE,MAAAA,UAAU,EAAG5B,MAAM,CAAC0B,UAAP,GAAoB,GAH7B;AAIJG,MAAAA,UAAU,EAAE,EAJR;AAKJC,MAAAA,SAAS,EAAEvB,QAAQ,CAAC,CAAD;AALf,KAQW;;AAAA,SAYnBwB,cAZmB,GAYF,MAAM;AACnB,WAAKC,YAAL,CAAkBC,OAAlB,CAA0BC,KAA1B,CAAgCC,MAAhC,GAAyCnC,MAAM,CAACC,WAAP,GAAqB,IAA9D,CADmB,CACiD;;AAEpE,UAAI,KAAKmC,WAAL,KAAqBpC,MAAM,CAAC0B,UAAhC,EAA6C;AAAE;AAC3C;AACH;;AAED,WAAKU,WAAL,GAAmBpC,MAAM,CAAC0B,UAA1B;AAEA,UAAID,SAAJ;AACA,UAAIE,aAAJ;;AAEA,UAAI3B,MAAM,CAAC0B,UAAP,GAAoB,GAAxB,EAA6B;AACzBD,QAAAA,SAAS,GAAG,KAAZ;AACAE,QAAAA,aAAa,GAAG,KAAhB;AACH,OAHD,MAGO,IAAI3B,MAAM,CAAC0B,UAAP,GAAoB,GAAxB,EAA6B;AAChCD,QAAAA,SAAS,GAAG,KAAZ;AACAE,QAAAA,aAAa,GAAG,IAAhB;AACH,OAHM,MAGA;AACHF,QAAAA,SAAS,GAAG,IAAZ;AACAE,QAAAA,aAAa,GAAG,IAAhB;AACH;;AAED,UAAI,OAAO,KAAKH,KAAL,CAAWa,aAAlB,KAAoC,WAApC,IAAmD,KAAKb,KAAL,CAAWa,aAAX,KAA6B,KAApF,EAA2F;AACvFZ,QAAAA,SAAS,GAAG,KAAZ,CADuF,CACpE;AACtB;;AAED,WAAKa,QAAL,CAAc;AAAEb,QAAAA,SAAF;AAAaE,QAAAA;AAAb,OAAd;AACH,KAxCkB;;AAAA,SA0CnBY,aA1CmB,GA0CHC,CAAC,IAAI;AACjB,UAAI,CAAC,KAAKC,MAAL,CAAYR,OAAjB,EAA0B;AACtB;AACH;;AAED,UACK,CAAC,KAAKQ,MAAL,CAAYR,OAAZ,CAAoBS,QAApB,CAA6BF,CAAC,CAACG,MAA/B,CAAD,IAA2C,CAAC,KAAKC,SAAL,CAAeX,OAAf,CAAuBS,QAAvB,CAAgCF,CAAC,CAACG,MAAlC,CAA7C,IACA3C,MAAM,CAAC0B,UAAP,GAAoB,GAFxB,EAGE;AACE,aAAKY,QAAL,CAAc;AAAEb,UAAAA,SAAS,EAAC;AAAZ,SAAd,EADF,CACsC;AACvC;;AAED,UAAI,CAAC,KAAKoB,UAAL,CAAgBZ,OAArB,EAA8B;AAC1B;AACH;;AAED,UACI,CAAC,KAAKY,UAAL,CAAgBZ,OAAhB,CAAwBS,QAAxB,CAAiCF,CAAC,CAACG,MAAnC,CAAD,IACA3C,MAAM,CAAC0B,UAAP,GAAoB,GAFxB,EAGE;AACE,aAAKY,QAAL,CAAc;AAAEX,UAAAA,aAAa,EAAC;AAAhB,SAAd,EADF,CAC0C;AAC3C;AACJ,KAhEkB;;AAAA,SAkEnBmB,aAlEmB,GAkEH,MAAM;AAAE;AACpB,UAAI,OAAO,KAAKtB,KAAL,CAAWa,aAAlB,KAAoC,WAAxC,EAAqD;AACjD,aAAKC,QAAL,CAAc;AAAED,UAAAA,aAAa,EAAC,CAAC,KAAKb,KAAL,CAAWC,SAA5B;AAAuCA,UAAAA,SAAS,EAAC,CAAC,KAAKD,KAAL,CAAWC;AAA7D,SAAd;AACH,OAFD,MAEO;AACH,aAAKa,QAAL,CAAc;AAAED,UAAAA,aAAa,EAAC,CAAC,KAAKb,KAAL,CAAWa,aAA5B;AAA2CZ,UAAAA,SAAS,EAAC,CAAC,KAAKD,KAAL,CAAWC;AAAjE,SAAd;AACH;AACJ,KAxEkB;;AAAA,SA0EnBsB,cA1EmB,GA0EDC,OAAD,IAAa;AAC1B,WAAKV,QAAL,CAAc;AAAER,QAAAA,SAAS,EAACkB,OAAZ;AAAqBvB,QAAAA,SAAS,EAAEzB,MAAM,CAAC0B,UAAP,IAAqB;AAArD,OAAd;AACH,KA5EkB;;AAAA,SA8EnBuB,WA9EmB,GA8EJC,IAAD,IAAU;AACpBC,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKb,QAAL,CAAc;AAAEc,UAAAA,UAAU,EAACF,IAAb;AAAmBvB,UAAAA,aAAa,EAAC;AAAjC,SAAd;AACH,OAFS,EAER,CAFQ,CAAV;AAGH,KAlFkB;;AAAA,SAoFnB0B,oBApFmB,GAoFI,MAAM;AACzB,WAAKf,QAAL,CAAc;AAAEX,QAAAA,aAAa,EAAC,KAAhB;AAAuByB,QAAAA,UAAU,EAACE;AAAlC,OAAd;AACH,KAtFkB;;AAAA,SAwFnBC,iBAxFmB,GAwFEf,CAAD,IAAO;AACvB,UAAI,CAAC,KAAKhB,KAAL,CAAW4B,UAAhB,EAA4B;AACxB,eAAO,KAAKd,QAAL,CAAc;AAAEkB,UAAAA,KAAK,EAAE;AAAT,SAAd,CAAP;AACH;;AAED,YAAMC,KAAK,GAAG,CAAC,GAAG,KAAKjC,KAAL,CAAWiC,KAAf,CAAd;AACA,YAAMd,MAAM,GAAGc,KAAK,CAACC,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAAClD,EAAF,KAAS,KAAKe,KAAL,CAAW4B,UAAX,CAAsB3C,EAA/C,CAAf;;AAEA,UAAI,OAAOkC,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,eAAO,KAAKL,QAAL,CAAc;AAAEkB,UAAAA,KAAK,EAAE;AAAT,SAAd,CAAP;AACH;;AAEDb,MAAAA,MAAM,CAACiB,KAAP,GAAepB,CAAC,CAACG,MAAF,CAASkB,KAAxB;AACA,WAAKvB,QAAL,CAAc;AAAEmB,QAAAA,KAAK,EAACA,KAAR;AAAe5B,QAAAA,UAAU,EAAC,KAAKiC,UAAL,CAAgBL,KAAhB;AAA1B,OAAd;AACH,KAtGkB;;AAAA,SAwGnBM,uBAxGmB,GAwGQvB,CAAD,IAAO;AAC7B,UAAI,CAAC,KAAKhB,KAAL,CAAW4B,UAAhB,EAA4B;AACxB,eAAO,KAAKd,QAAL,CAAc;AAAEkB,UAAAA,KAAK,EAAE;AAAT,SAAd,CAAP;AACH;;AAED,YAAMC,KAAK,GAAG,CAAC,GAAG,KAAKjC,KAAL,CAAWiC,KAAf,CAAd;AACA,YAAMd,MAAM,GAAGc,KAAK,CAACC,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAAClD,EAAF,KAAS,KAAKe,KAAL,CAAW4B,UAAX,CAAsB3C,EAA/C,CAAf;;AAEA,UAAI,OAAOkC,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,eAAO,KAAKL,QAAL,CAAc;AAAEkB,UAAAA,KAAK,EAAE;AAAT,SAAd,CAAP;AACH;;AAEDb,MAAAA,MAAM,CAACqB,WAAP,GAAqBxB,CAAC,CAACG,MAAF,CAASkB,KAA9B;AACA,WAAKvB,QAAL,CAAc;AAAEmB,QAAAA,KAAK,EAACA,KAAR;AAAe5B,QAAAA,UAAU,EAAC,KAAKiC,UAAL,CAAgBL,KAAhB;AAA1B,OAAd;AACH,KAtHkB;;AAAA,SAwHnBK,UAxHmB,GAwHLL,KAAD,IAAW;AACpB,UAAI5B,UAAU,GAAG,CACb;AAAE4B,QAAAA,KAAK,EAAE,EAAT;AAAa7C,QAAAA,SAAS,EAAE;AAAxB,OADa,EACmB;AAChC;AAAE6C,QAAAA,KAAK,EAAE;AAAT,OAFa,CAEC;AAFD,OAAjB;AAKAA,MAAAA,KAAK,CAACQ,OAAN,CAAcN,CAAC,IAAI;AACf,YAAIA,CAAC,CAAC/C,SAAN,EAAiB;AACb,iBAAOiB,UAAU,CAAC,CAAD,CAAV,CAAc4B,KAAd,CAAoBS,IAApB,CAAyBP,CAAzB,CAAP;AACH;;AAED,YAAI,CAACA,CAAC,CAACtD,IAAP,EAAa;AACT,iBAAOwB,UAAU,CAAC,CAAD,CAAV,CAAc4B,KAAd,CAAoBS,IAApB,CAAyBP,CAAzB,CAAP;AACH;;AAED,YAAIhB,MAAM,GAAGd,UAAU,CAAC6B,IAAX,CAAgBS,CAAC,IAAIA,CAAC,CAAC9D,IAAF,KAAWsD,CAAC,CAACtD,IAAlC,CAAb;;AAEA,YAAI,OAAOsC,MAAP,KAAkB,WAAtB,EAAmC;AAC/Bd,UAAAA,UAAU,CAACqC,IAAX,CAAgB;AAAET,YAAAA,KAAK,EAAC,CAACE,CAAD,CAAR;AAAatD,YAAAA,IAAI,EAACsD,CAAC,CAACtD;AAApB,WAAhB;AACH,SAFD,MAEO;AACHsC,UAAAA,MAAM,CAACc,KAAP,CAAaS,IAAb,CAAkBP,CAAlB;AACH;AACJ,OAhBD;AAkBA,aAAO9B,UAAP;AACH,KAjJkB;;AAAA,SAmJnBuC,iBAnJmB,GAmJC,MAAM;AACtBpE,MAAAA,MAAM,CAACqE,gBAAP,CAAwB,QAAxB,EAAkC,KAAKtC,cAAvC;AACA/B,MAAAA,MAAM,CAACqE,gBAAP,CAAwB,OAAxB,EAAiC,KAAK9B,aAAtC,EAFsB,CAItB;;AAEA;;;;;;;;;AASA,YAAM+B,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEA,UAAIC,MAAM,GAAG;AACTC,QAAAA,OAAO,EAAE;AACL,wBAAcJ;AADT;AADA,OAAb;AAMA5E,MAAAA,KAAK,CAACiF,GAAN,CAAU,gCAAV,EAA4CF,MAA5C,EACKG,IADL,CACUC,GAAG,IAAI;AACT,aAAKvC,QAAL,CAAc;AAAEwC,UAAAA,QAAQ,EAACD,GAAG,CAACE,IAAJ,CAASD;AAApB,SAAd;AACH,OAHL,EAIKE,KAJL,CAIWxC,CAAC,IAAI;AACR,YAAIA,CAAC,CAACyC,QAAN,EAAgB;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAY3C,CAAC,CAACyC,QAAF,CAAWF,IAAvB;AACH;AACJ,OARL;AAUArF,MAAAA,KAAK,CAACiF,GAAN,CAAU,uCAAV,EAAmDF,MAAnD,EACKG,IADL,CACUC,GAAG,IAAI;AACT,cAAMpB,KAAK,GAAGoB,GAAG,CAACE,IAAlB;AACA,aAAKzC,QAAL,CAAc;AAAEmB,UAAAA,KAAK,EAACA,KAAR;AAAe5B,UAAAA,UAAU,EAAC,KAAKiC,UAAL,CAAgBL,KAAhB;AAA1B,SAAd;AACH,OAJL,EAKKuB,KALL,CAKWxC,CAAC,IAAI;AACR,YAAIA,CAAC,CAACyC,QAAN,EAAgB;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAY3C,CAAC,CAACyC,QAAF,CAAWF,IAAvB;AACH;;AAED,aAAKzC,QAAL,CAAc;AAAEmB,UAAAA,KAAK,EAAC,EAAR;AAAY5B,UAAAA,UAAU,EAAC;AAAvB,SAAd;AACH,OAXL;AAYH,KAhMkB;;AAAA,SAkMnBuD,oBAlMmB,GAkMI,MAAM;AACzBpF,MAAAA,MAAM,CAACqF,mBAAP,CAA2B,QAA3B,EAAqC,KAAKtD,cAA1C;AACA/B,MAAAA,MAAM,CAACqF,mBAAP,CAA2B,OAA3B,EAAoC,KAAK9C,aAAzC;AACH,KArMkB;;AAEf,SAAKE,MAAL,GAAcnD,KAAK,CAACgG,SAAN,EAAd;AACA,SAAKzC,UAAL,GAAkBvD,KAAK,CAACgG,SAAN,EAAlB;AACA,SAAK1C,SAAL,GAAiBtD,KAAK,CAACgG,SAAN,EAAjB,CAJe,CAIqB;;AACpC,SAAKtD,YAAL,GAAoB1C,KAAK,CAACgG,SAAN,EAApB;AAEA,SAAKlD,WAAL,GAAmBpC,MAAM,CAAC0B,UAA1B;AACH,GAjBwB,CAmBzB;;;AA6LA6D,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAE,KAAKvD,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AACI,MAAA,OAAO,EAAE,MAAM;AAAC,aAAKT,KAAL,CAAWiE,IAAX,CAAgBC,OAAhB,CAAwB,MAAM;AAC1C,eAAKlE,KAAL,CAAWmE,OAAX,CAAmBxB,IAAnB,CAAwB,GAAxB;AACH,SAFe;AAEb,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAMI,oBAAC,GAAD;AACI,MAAA,SAAS,EAAE,KAAK1C,KAAL,CAAWM,SAD1B;AAEI,MAAA,QAAQ,EAAEvB,QAFd;AAGI,MAAA,MAAM,EAAE,KAAKkC,MAHjB;AAII,MAAA,SAAS,EAAE,KAAKjB,KAAL,CAAWC,SAJ1B;AAKI,MAAA,UAAU,EAAE,KAAKD,KAAL,CAAWK,UAL3B;AAMI,MAAA,cAAc,EAAGmB,OAAD,IAAa,KAAKD,cAAL,CAAoBC,OAApB,CANjC;AAOI,MAAA,QAAQ,EAAE,KAAKxB,KAAL,CAAWsD,QAPzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eAeI,oBAAC,QAAD;AACI,MAAA,SAAS,EAAE,KAAKtD,KAAL,CAAWC,SAD1B;AAEI,MAAA,aAAa,EAAE,KAAKD,KAAL,CAAWG,aAF9B;AAGI,MAAA,SAAS,EAAE,KAAKH,KAAL,CAAWM,SAH1B;AAII,MAAA,UAAU,EAAE,KAAKN,KAAL,CAAWK,UAJ3B;AAKI,MAAA,UAAU,EAAE,KAAKL,KAAL,CAAW4B,UAL3B;AAMI,MAAA,WAAW,EAAGO,CAAD,IAAO,KAAKV,WAAL,CAAiBU,CAAjB,CANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,eAuBI,oBAAC,OAAD;AACI,MAAA,aAAa,EAAE,KAAKnC,KAAL,CAAWG,aAD9B;AAEI,MAAA,UAAU,EAAE,KAAKH,KAAL,CAAW4B,UAF3B;AAGI,MAAA,UAAU,EAAE,KAAKP,UAHrB;AAII,MAAA,oBAAoB,EAAE,KAAKQ,oBAJ/B;AAKI,MAAA,iBAAiB,EAAE,KAAKE,iBAL5B;AAMI,MAAA,uBAAuB,EAAE,KAAKQ,uBANlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBJ,eA+BI,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAE,KAAKnB,SAAlB;AAA6B,MAAA,OAAO,EAAE,KAAKE,aAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/BJ,CADJ;AAmCH;;AApPwB;;AAuP7B,eAAezB,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport styled, { ThemeConsumer } from 'styled-components';\r\nimport axios from 'axios';\r\n\r\nimport Nav from './Nav';\r\nimport Contents from './Contents';\r\nimport Details from './Details';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    width: 100vw;\r\n    height: ${window.innerHeight + 'px'};\r\n    margin: 0;\r\n    padding: 0;\r\n    overflow: hidden;\r\n`\r\n\r\nconst Button = styled.div`\r\n    position: absolute;\r\n    left: 10px;\r\n    bottom: 10px;\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 25px;\r\n    background-color: #105510;\r\n    z-index: 1001;\r\n\r\n    @media screen {\r\n        &:hover {\r\n            cursor: pointer;\r\n        }\r\n    }\r\n`\r\n\r\nconst SignOutButton = styled.button`\r\n    position: fixed;\r\n    width: 200px;\r\n    height:80px;\r\n    top: 100px;\r\n    right: 500px;\r\n    z-index: 1000;\r\n`\r\n\r\nlet date = new Date();\r\n\r\nconst taskTabs = [ \r\n    { \r\n        label: 'Today', \r\n        id:'today',\r\n        groupFilter: (taskGroup) => {\r\n\r\n            if (taskGroup.completed) {\r\n                return false;\r\n            }\r\n\r\n            if (!taskGroup.date) {\r\n                return false;\r\n            }\r\n\r\n            if (\r\n                taskGroup.date.getYear() === date.getYear() &&\r\n                taskGroup.date.getMonth() === date.getMonth() &&\r\n                taskGroup.date.getDate() === date.getDate()\r\n            ) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    },\r\n    { \r\n        label: 'Tomorrow',\r\n        id:'tomorrow',\r\n        groupFilter: (taskGroup) => {\r\n\r\n            if (taskGroup.completed) {\r\n                return false;\r\n            }\r\n\r\n            if (!taskGroup.date) {\r\n                return false;\r\n            }\r\n\r\n\r\n            if (\r\n                taskGroup.date.getYear() === date.getYear() &&\r\n                taskGroup.date.getMonth() === date.getMonth() &&\r\n                taskGroup.date.getDate() === date.getDate() + 1\r\n            ) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    },\r\n    { \r\n        label: 'This week',\r\n        id: 'this-week',\r\n        groupFilter: (taskGroup) => {\r\n\r\n            if (taskGroup.completed) {\r\n                return false;\r\n            }\r\n\r\n            if (!taskGroup.date) {\r\n                return false;\r\n            }\r\n\r\n            let weekStart = new Date();\r\n            let weekEnd = new Date();\r\n            weekStart.setDate(date.getDate() - date.getDay());\r\n            weekStart.setHours(24,0,0);\r\n            weekEnd.setDate(date.getDate() + (7 - date.getDay()));\r\n            weekEnd.setHours(23,59,59);\r\n\r\n            if (\r\n                taskGroup.date >= weekStart &&\r\n                taskGroup.date <= weekEnd\r\n            ) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } \r\n    },\r\n    {\r\n        label: 'Next week',\r\n        id: 'next-week',\r\n        groupFilter: (taskGroup) => {\r\n\r\n            if (taskGroup.completed) {\r\n                return false;\r\n            }\r\n\r\n            let weekStart = new Date();\r\n            let weekEnd = new Date();\r\n            weekStart.setDate((date.getDate() - date.getDay()) + 7);\r\n            weekStart.setHours(24,0,0);\r\n            weekEnd.setDate((date.getDate() + (7 - date.getDay())) + 7);\r\n            weekEnd.setHours(23,59,59);\r\n\r\n            if (\r\n                taskGroup.date >= weekStart &&\r\n                taskGroup.date <= weekEnd\r\n            ) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n];\r\n\r\n\r\nclass List extends Component {\r\n    state = {\r\n        navToggle: (window.innerWidth >= 900),\r\n        detailsToggle: (window.innerWidth >= 700),\r\n        mobileView: (window.innerWidth < 700),\r\n        taskGroups: [],\r\n        activeTab: taskTabs[0],\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.navRef = React.createRef();\r\n        this.detailsRef = React.createRef();\r\n        this.buttonRef = React.createRef(); // This is temporary, will be deleted.\r\n        this.containerRef = React.createRef();\r\n\r\n        this.windowWidth = window.innerWidth;\r\n    }\r\n\r\n    // -- Events --\r\n\r\n    onResizeWindow = () => {\r\n        this.containerRef.current.style.height = window.innerHeight + 'px'; // Keep 100% height on window resize.\r\n\r\n        if (this.windowWidth === window.innerWidth ) { // Prevent nav and details from hiding on height change. (Necessary for mobile when keyboard changes site height)\r\n            return;\r\n        }\r\n\r\n        this.windowWidth = window.innerWidth;\r\n\r\n        let navToggle;\r\n        let detailsToggle;\r\n\r\n        if (window.innerWidth < 700) {\r\n            navToggle = false;\r\n            detailsToggle = false;\r\n        } else if (window.innerWidth < 900) {\r\n            navToggle = false;\r\n            detailsToggle = true;\r\n        } else {\r\n            navToggle = true;\r\n            detailsToggle = true;\r\n        }\r\n\r\n        if (typeof this.state.userNavToggle !== 'undefined' && this.state.userNavToggle === false) { \r\n            navToggle = false; // Once user has hidden the nav it should not appear on resize.\r\n        }\r\n\r\n        this.setState({ navToggle, detailsToggle });\r\n    }\r\n\r\n    onClickWindow = e => {\r\n        if (!this.navRef.current) {\r\n            return;\r\n        }\r\n\r\n        if(\r\n            (!this.navRef.current.contains(e.target) && !this.buttonRef.current.contains(e.target)) &&\r\n            window.innerWidth < 900\r\n        ) {\r\n            this.setState({ navToggle:false }); // Hides navigation when clicking outside of it in mobile mode.\r\n        }\r\n\r\n        if (!this.detailsRef.current) {\r\n            return;\r\n        }\r\n\r\n        if(\r\n            !this.detailsRef.current.contains(e.target) &&\r\n            window.innerWidth < 700\r\n        ) {\r\n            this.setState({ detailsToggle:false }); // Hides details when clicking outside of it in mobile mode.\r\n        }\r\n    }\r\n\r\n    onClickButton = () => { // Auto toggle and user toggle is spearated.\r\n        if (typeof this.state.userNavToggle === 'undefined') {\r\n            this.setState({ userNavToggle:!this.state.navToggle, navToggle:!this.state.navToggle });\r\n        } else {\r\n            this.setState({ userNavToggle:!this.state.userNavToggle, navToggle:!this.state.navToggle });\r\n        }\r\n    }\r\n\r\n    onClickTaskTab = (taskTab) => {\r\n        this.setState({ activeTab:taskTab, navToggle:(window.innerWidth >= 900) });\r\n    }\r\n\r\n    onClickTask = (task) => {\r\n        setTimeout(() => {\r\n            this.setState({ activeTask:task, detailsToggle:true });\r\n        },1)\r\n    }\r\n    \r\n    onClickDetailsReturn = () => {\r\n        this.setState({ detailsToggle:false, activeTask:undefined });\r\n    }\r\n\r\n    onChangeTaskTitle = (e) => {\r\n        if (!this.state.activeTask) {\r\n            return this.setState({ error: 'No active task while attempting to change title.'});\r\n        }\r\n\r\n        const tasks = [...this.state.tasks];\r\n        const target = tasks.find(t => t.id === this.state.activeTask.id);\r\n        \r\n        if (typeof target === 'undefined') {\r\n            return this.setState({ error: 'The task does not exist.'});\r\n        }\r\n\r\n        target.title = e.target.value;\r\n        this.setState({ tasks:tasks, taskGroups:this.groupTasks(tasks) });\r\n    }\r\n\r\n    onChangeTaskDescription = (e) => {\r\n        if (!this.state.activeTask) {\r\n            return this.setState({ error: 'No active task while attempting to change title.'});\r\n        }\r\n\r\n        const tasks = [...this.state.tasks];\r\n        const target = tasks.find(t => t.id === this.state.activeTask.id);\r\n        \r\n        if (typeof target === 'undefined') {\r\n            return this.setState({ error: 'The task does not exist.'});\r\n        }\r\n\r\n        target.description = e.target.value;\r\n        this.setState({ tasks:tasks, taskGroups:this.groupTasks(tasks) });\r\n    }\r\n\r\n    groupTasks = (tasks) => {\r\n        let taskGroups = [\r\n            { tasks: [], completed: true }, // Completed task group.\r\n            { tasks: [] } // No date task group.\r\n        ];\r\n\r\n        tasks.forEach(t => {\r\n            if (t.completed) {\r\n                return taskGroups[0].tasks.push(t);\r\n            }\r\n\r\n            if (!t.date) {\r\n                return taskGroups[1].tasks.push(t);\r\n            }\r\n\r\n            let target = taskGroups.find(g => g.date === t.date);\r\n\r\n            if (typeof target === 'undefined') {\r\n                taskGroups.push({ tasks:[t], date:t.date });\r\n            } else {\r\n                target.tasks.push(t);\r\n            }\r\n        });\r\n\r\n        return taskGroups;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        window.addEventListener('resize', this.onResizeWindow);\r\n        window.addEventListener('click', this.onClickWindow);        \r\n\r\n        // Grouping tasks by date.\r\n\r\n        /*const tasks = [\r\n            { id:'task1', title:'Wyrzucić śmieci.', description:'Elo.', date: date },\r\n            { id:'task2', title:'Zrobić pranie.', description: '', date: date },\r\n            { id:'task3', title:'Pamiętaj aby strzelić bujakę po mieście i dostać limoooooooooooooooooooo.', date: date2 },\r\n            { id:'task3', title:'Pamiętaj o kablu do akumulatora.', date: date3, completed:true },\r\n            { id:'task3', title:'Pobić żonę', date: date4 },\r\n            { id:'task3', title:'Pobić żonę2' },\r\n        ];*/\r\n\r\n        const token = localStorage.getItem('token');\r\n\r\n        let config = {\r\n            headers: {\r\n                'auth-token': token\r\n            }\r\n        }\r\n\r\n        axios.get('http://localhost:9000/api/user', config)\r\n            .then(res => {\r\n                this.setState({ username:res.data.username });\r\n            })\r\n            .catch(e => {\r\n                if (e.response) {\r\n                    console.log(e.response.data);\r\n                }\r\n            });\r\n        \r\n        axios.get('http://localhost:9000/api/tasks/fetch', config)\r\n            .then(res => {\r\n                const tasks = res.data;\r\n                this.setState({ tasks:tasks, taskGroups:this.groupTasks(tasks) });\r\n            })\r\n            .catch(e => {\r\n                if (e.response) {\r\n                    console.log(e.response.data);\r\n                }\r\n\r\n                this.setState({ tasks:[], taskGroups:[] });\r\n            });\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        window.removeEventListener('resize', this.onResizeWindow);\r\n        window.removeEventListener('click', this.onClickWindow);  \r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <Container ref={this.containerRef}>\r\n                <SignOutButton\r\n                    onClick={() => {this.props.auth.signOut(() => {\r\n                        this.props.history.push('/');\r\n                    })}}\r\n                >SignOut</SignOutButton>\r\n                <Nav\r\n                    activeTab={this.state.activeTab}\r\n                    taskTabs={taskTabs}\r\n                    navRef={this.navRef}\r\n                    navToggle={this.state.navToggle}\r\n                    taskGroups={this.state.taskGroups}\r\n                    onClickTaskTab={(taskTab) => this.onClickTaskTab(taskTab)}\r\n                    username={this.state.username}\r\n                />\r\n                <Contents\r\n                    navToggle={this.state.navToggle}\r\n                    detailsToggle={this.state.detailsToggle}\r\n                    activeTab={this.state.activeTab}\r\n                    taskGroups={this.state.taskGroups}\r\n                    activeTask={this.state.activeTask}\r\n                    onClickTask={(t) => this.onClickTask(t)}\r\n                />\r\n                <Details\r\n                    detailsToggle={this.state.detailsToggle}\r\n                    activeTask={this.state.activeTask}\r\n                    detailsRef={this.detailsRef}\r\n                    onClickDetailsReturn={this.onClickDetailsReturn}\r\n                    onChangeTaskTitle={this.onChangeTaskTitle}\r\n                    onChangeTaskDescription={this.onChangeTaskDescription}\r\n                />\r\n                <Button ref={this.buttonRef} onClick={this.onClickButton}/>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n \r\nexport default List;"]},"metadata":{},"sourceType":"module"}