{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mateusz\\\\Desktop\\\\todo\\\\src\\\\components\\\\List\\\\Contents.jsx\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport TaskGroup from './TaskGroup';\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    height: 100%;\n    margin-left: ${props => props.navToggle ? '250px' : '0px'};\n    border-right: 1px solid rgba(0,0,0,0.1);\n    transition: 0.2s ease-in-out;\n\n    @media (max-width: 900px) {\n        margin-left: 0px;\n    }\n`;\nconst Title = styled.div`\n    display: flex;\n    width: calc(100% - 30px);\n    height: 80px;\n    align-items: center;\n    padding-left: 30px;\n    border-bottom: 1px solid rgba(0,0,0,0.1);\n    font-size: 30px;\n    font-weight: bold;\n`;\nconst TaskGroups = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    flex-grow: 1;\n    padding-top: 10px;\n    overflow: auto;\n`;\n\nclass Contents extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      taskView: 'today',\n      tasks: [{\n        id: 'task1',\n        description: 'Wyrzucić śmieci.',\n        date: 'today'\n      }, {\n        id: 'task2',\n        description: 'Zrobić pranie.',\n        date: 'today'\n      }, {\n        id: 'task3',\n        description: 'Strzelić bujakę po mieście i dostać limo.',\n        date: 'tomorrow'\n      }]\n    };\n\n    this.renderTaskGroups = () => {\n      let groups = [];\n      tasks.forEach(t => {\n        let target = groups.find(g => g.date === t.date);\n\n        if (typeof target === 'undefined') {\n          groups.push({\n            tasks: [t],\n            date: t.date\n          });\n        } else {\n          target.tasks.push(t);\n        }\n      });\n      console.log(groups);\n      /*switch(this.state.taskView) {\r\n          case 'today': \r\n              const tasksToday = this.state.tasks.filter(t => t.date === 'today');\r\n              return <TaskGroup name='Today' tasks={tasksToday}></TaskGroup>\r\n          \r\n          case 'tomorrow': \r\n              const tasksTomorrow = this.state.tasks.filter(t => t.date === 'tomorrow');\r\n              return <TaskGroup name='Tomorrow' tasks={tasksTomorrow}></TaskGroup>\r\n            case 'this-week':\r\n              const\r\n        }*/\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      navToggle: this.props.navToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, \"Today\"), /*#__PURE__*/React.createElement(TaskGroups, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, this.renderTaskGroups()));\n  }\n\n}\n\nexport default Contents;","map":{"version":3,"sources":["C:/Users/Mateusz/Desktop/todo/src/components/List/Contents.jsx"],"names":["React","Component","styled","TaskGroup","Container","div","props","navToggle","Title","TaskGroups","Contents","state","taskView","tasks","id","description","date","renderTaskGroups","groups","forEach","t","target","find","g","push","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAI;;;;;mBAKVC,KAAK,IAAIA,KAAK,CAACC,SAAN,GAAkB,OAAlB,GAA4B,KAAM;;;;;;;CAL9D;AAaA,MAAMC,KAAK,GAAGN,MAAM,CAACG,GAAI;;;;;;;;;CAAzB;AAWA,MAAMI,UAAU,GAAGP,MAAM,CAACG,GAAI;;;;;;;CAA9B;;AASA,MAAMK,QAAN,SAAuBT,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BU,KAD6B,GACrB;AACJC,MAAAA,QAAQ,EAAC,OADL;AAEJC,MAAAA,KAAK,EAAE,CACH;AAAEC,QAAAA,EAAE,EAAC,OAAL;AAAcC,QAAAA,WAAW,EAAC,kBAA1B;AAA8CC,QAAAA,IAAI,EAAC;AAAnD,OADG,EAEH;AAAEF,QAAAA,EAAE,EAAC,OAAL;AAAcC,QAAAA,WAAW,EAAC,gBAA1B;AAA4CC,QAAAA,IAAI,EAAC;AAAjD,OAFG,EAGH;AAAEF,QAAAA,EAAE,EAAC,OAAL;AAAcC,QAAAA,WAAW,EAAC,2CAA1B;AAAuEC,QAAAA,IAAI,EAAC;AAA5E,OAHG;AAFH,KADqB;;AAAA,SAY7BC,gBAZ6B,GAYV,MAAM;AAErB,UAAIC,MAAM,GAAG,EAAb;AAEAL,MAAAA,KAAK,CAACM,OAAN,CAAcC,CAAC,IAAI;AACf,YAAIC,MAAM,GAAGH,MAAM,CAACI,IAAP,CAAYC,CAAC,IAAIA,CAAC,CAACP,IAAF,KAAWI,CAAC,CAACJ,IAA9B,CAAb;;AAEA,YAAI,OAAOK,MAAP,KAAkB,WAAtB,EAAmC;AAC/BH,UAAAA,MAAM,CAACM,IAAP,CAAY;AAAEX,YAAAA,KAAK,EAAC,CAACO,CAAD,CAAR;AAAaJ,YAAAA,IAAI,EAACI,CAAC,CAACJ;AAApB,WAAZ;AACH,SAFD,MAEO;AACHK,UAAAA,MAAM,CAACR,KAAP,CAAaW,IAAb,CAAkBJ,CAAlB;AACH;AACJ,OARD;AAUAK,MAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AAEA;;;;;;;;;;;AAaH,KAzC4B;AAAA;;AA2C7BS,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAE,KAAKrB,KAAL,CAAWC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKU,gBAAL,EADL,CAFJ,CADJ;AAYH;;AAxD4B;;AA2DjC,eAAeP,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport TaskGroup from './TaskGroup';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-grow: 1;\r\n    height: 100%;\r\n    margin-left: ${props => props.navToggle ? '250px' : '0px'};\r\n    border-right: 1px solid rgba(0,0,0,0.1);\r\n    transition: 0.2s ease-in-out;\r\n\r\n    @media (max-width: 900px) {\r\n        margin-left: 0px;\r\n    }\r\n`\r\nconst Title = styled.div`\r\n    display: flex;\r\n    width: calc(100% - 30px);\r\n    height: 80px;\r\n    align-items: center;\r\n    padding-left: 30px;\r\n    border-bottom: 1px solid rgba(0,0,0,0.1);\r\n    font-size: 30px;\r\n    font-weight: bold;\r\n`\r\n\r\nconst TaskGroups = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    flex-grow: 1;\r\n    padding-top: 10px;\r\n    overflow: auto;\r\n`\r\n\r\nclass Contents extends Component {\r\n    state = {\r\n        taskView:'today',\r\n        tasks: [\r\n            { id:'task1', description:'Wyrzucić śmieci.', date:'today' },\r\n            { id:'task2', description:'Zrobić pranie.', date:'today' },\r\n            { id:'task3', description:'Strzelić bujakę po mieście i dostać limo.', date:'tomorrow' },\r\n        ]\r\n    }\r\n\r\n    // -- Renders --\r\n\r\n    renderTaskGroups = () => {\r\n\r\n        let groups = [];\r\n\r\n        tasks.forEach(t => {\r\n            let target = groups.find(g => g.date === t.date);\r\n\r\n            if (typeof target === 'undefined') {\r\n                groups.push({ tasks:[t], date:t.date });\r\n            } else {\r\n                target.tasks.push(t);\r\n            }\r\n        });\r\n\r\n        console.log(groups);\r\n\r\n        /*switch(this.state.taskView) {\r\n            case 'today': \r\n                const tasksToday = this.state.tasks.filter(t => t.date === 'today');\r\n                return <TaskGroup name='Today' tasks={tasksToday}></TaskGroup>\r\n            \r\n            case 'tomorrow': \r\n                const tasksTomorrow = this.state.tasks.filter(t => t.date === 'tomorrow');\r\n                return <TaskGroup name='Tomorrow' tasks={tasksTomorrow}></TaskGroup>\r\n\r\n            case 'this-week':\r\n                const\r\n\r\n        }*/\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container navToggle={this.props.navToggle}>\r\n                <Title>Today</Title>\r\n                <TaskGroups>\r\n                    {this.renderTaskGroups()}\r\n                    {/*<TaskGroup name='Today'></TaskGroup>\r\n                    <TaskGroup name='Tomorrow'></TaskGroup>\r\n                    <TaskGroup name='Saturday'></TaskGroup>\r\n                    <TaskGroup name='Completed'></TaskGroup>*/}\r\n                </TaskGroups>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Contents;"]},"metadata":{},"sourceType":"module"}