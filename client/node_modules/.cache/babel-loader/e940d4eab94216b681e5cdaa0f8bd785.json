{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mateusz\\\\Desktop\\\\todo\\\\src\\\\components\\\\List\\\\List.jsx\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Nav from './Nav';\nimport Contents from './Contents';\nimport Details from './Details';\nconst Container = styled.div`\n    display: flex;\n    width: 100%;\n    height: calc(100vh - 2px);\n    margin: 0;\n    padding: 0;\n`;\nconst Button = styled.div`\n    position: fixed;\n    left: 10px;\n    bottom: 10px;\n    width: 50px;\n    height: 50px;\n    border-radius: 25px;\n    background-color: #105510;\n    \n    &:hover {\n        cursor: pointer;\n    }\n`;\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      navToggle: window.innerWidth >= 900,\n      detailsToggle: window.innerWidth >= 700\n    };\n\n    this.onResizeWindow = () => {\n      let navToggle;\n      let detailsToggle;\n\n      if (window.innerWidth < 700) {\n        navToggle = false;\n        detailsToggle = false;\n      } else if (window.innerWidth < 900) {\n        navToggle = false;\n        detailsToggle = true;\n      } else {\n        navToggle = true;\n        detailsToggle = true;\n      }\n\n      if (typeof this.state.userNavToggle !== 'undefined' && this.state.userNavToggle === false) {\n        navToggle = false; // Once user has hidden the nav it should not appear on resize.\n      }\n\n      this.setState({\n        navToggle,\n        detailsToggle\n      });\n    };\n\n    this.onClickWindow = e => {\n      console.log(this.navRef); //console.log(this.navRef.current.contains(e.target));\n    };\n\n    this.onClickButton = () => {\n      // Auto toggle and user toggle is spearated.\n      if (typeof this.state.userNavToggle === 'undefined') {\n        this.setState({\n          userNavToggle: !this.state.navToggle,\n          navToggle: !this.state.navToggle\n        });\n      } else {\n        this.setState({\n          userNavToggle: !this.state.userNavToggle,\n          navToggle: !this.state.navToggle\n        });\n      }\n    };\n\n    this.componentDidMount = () => {\n      window.addEventListener('resize', this.onResizeWindow);\n      window.addEventListener('click', this.onClickWindow);\n    };\n\n    this.navRef = React.createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      navToggle: this.state.navToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Contents, {\n      navToggle: this.state.navToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Details, {\n      detailsToggle: this.state.detailsToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.onClickButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.navRef,\n      style: {\n        position: 'fixed',\n        width: '100px',\n        height: '100px',\n        backgroundColor: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["C:/Users/Mateusz/Desktop/todo/src/components/List/List.jsx"],"names":["React","Component","styled","Nav","Contents","Details","Container","div","Button","List","constructor","props","state","navToggle","window","innerWidth","detailsToggle","onResizeWindow","userNavToggle","setState","onClickWindow","e","console","log","navRef","onClickButton","componentDidMount","addEventListener","createRef","render","position","width","height","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Nav from './Nav';\r\nimport Contents from './Contents';\r\nimport Details from './Details';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    height: calc(100vh - 2px);\r\n    margin: 0;\r\n    padding: 0;\r\n`\r\n\r\nconst Button = styled.div`\r\n    position: fixed;\r\n    left: 10px;\r\n    bottom: 10px;\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 25px;\r\n    background-color: #105510;\r\n    \r\n    &:hover {\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\nclass List extends Component {\r\n    state = {\r\n        navToggle: (window.innerWidth >= 900),\r\n        detailsToggle: (window.innerWidth >= 700)\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.navRef = React.createRef();\r\n    }\r\n\r\n    onResizeWindow = () => {\r\n        let navToggle;\r\n        let detailsToggle;\r\n\r\n        if (window.innerWidth < 700) {\r\n            navToggle = false;\r\n            detailsToggle = false;\r\n        } else if (window.innerWidth < 900) {\r\n            navToggle = false;\r\n            detailsToggle = true;\r\n        } else {\r\n            navToggle = true;\r\n            detailsToggle = true;\r\n        }\r\n\r\n        if (typeof this.state.userNavToggle !== 'undefined' && this.state.userNavToggle === false) { \r\n            navToggle = false; // Once user has hidden the nav it should not appear on resize.\r\n        }\r\n\r\n        this.setState({ navToggle, detailsToggle });\r\n    }\r\n\r\n    onClickWindow = e => {\r\n        console.log(this.navRef);\r\n        //console.log(this.navRef.current.contains(e.target));\r\n    }\r\n\r\n    onClickButton = () => { // Auto toggle and user toggle is spearated.\r\n        if (typeof this.state.userNavToggle === 'undefined') {\r\n            this.setState({ userNavToggle:!this.state.navToggle, navToggle:!this.state.navToggle });\r\n        } else {\r\n            this.setState({ userNavToggle:!this.state.userNavToggle, navToggle:!this.state.navToggle });\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        window.addEventListener('resize', this.onResizeWindow);\r\n        window.addEventListener('click', this.onClickWindow);\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <Container>\r\n                <Nav navToggle={this.state.navToggle}/>\r\n                <Contents navToggle={this.state.navToggle}/>\r\n                <Details detailsToggle={this.state.detailsToggle}/>\r\n                <Button onClick={this.onClickButton}/>\r\n                <div ref={this.navRef} style={{position:'fixed',width:'100px',height:'100px',backgroundColor:'red'}}></div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n \r\nexport default List;"]},"metadata":{},"sourceType":"module"}